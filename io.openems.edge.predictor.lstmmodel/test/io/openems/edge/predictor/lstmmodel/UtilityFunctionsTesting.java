package io.openems.edge.predictor.lstmmodel;

import static org.junit.Assert.*;

import java.util.ArrayList;
import java.util.Arrays;

import org.junit.Test;

import io.openems.edge.predictor.lstmmodel.util.Lstm;

public class UtilityFunctionsTesting {

	@Test
	public void test() {

		// Lstm lstm = new Lstm(null, 0, 0);

		Double[] x = { 0.0020448114398970985, -0.0022202789949860025, -0.003115263904227783, -0.003306682820454876,
				-0.003342925186786694, -0.0033412414821115677, -0.0033270741528158565, -0.0033059259127984353,
				-0.0032789794616950863, -0.0032464884243589287, -0.003208508074220573, -0.0031650517316158533,
				-0.0031161240690310565, -0.0030617281790200623, -0.0030018670715729057, -0.002936543992152152,
				-0.0028657624906581747, -0.0027895264379974583, -0.002707840031766162, -0.0026207077998060546,
				-0.002528134603474008, -0.0024301256410157457, -0.0023266864511222174, -0.0022178229166840424,
				-0.0021035412687484545, -0.001983848090675755, -0.0018587503224933855, -0.0017282552654490635,
				-0.0015923705867562088, -0.0014511043245342137, -0.0013044648929384506, -0.0011524610874779073,
				-9.95102090520672E-4, -8.323974769807174E-4, -6.64357220186651E-4, -4.909916979278783E-4,
				-3.123116986766261E-4, -1.2832842798005117E-4, 6.0946484976676096E-5, 2.555009806433084E-4,
				4.553225622149215E-4, 6.603982885842186E-4, 8.707147671392912E-4, 0.0010862581464099463,
				0.00130701410856926, 0.0015329678617905795, 0.0017641041324675255, 0.0020004071573020976,
				0.002241860675260998, 0.002488447919410941, 0.002740151608633945, 0.0029969539392293854,
				0.0032588365764071314, 0.003525780645680765, 0.003797766724160545, 0.004074774831758998,
				0.0043567844223090235, 0.004643774374605392, 0.004935722983374524, 0.005232607950178436,
				0.00553440637426017, 0.005841094743339714, 0.006152648924364068, 0.006469044154223225,
				0.006790255030434178, 0.007116255501807833, 0.007447018859100041, 0.00778251772565941,
				0.008122724048078789, 0.008467609086858618, 0.008817143407092054, 0.009171296869179835,
				0.009530038619584236, 0.009893337081632092, 0.010261159946375775, 0.01063347416352134,
				0.01101024593243538, 0.011391440693237942, 0.011777023117995111, 0.012166957102017317,
				0.012561205755278304, 0.012959731393961671, 0.013362495532147411, 0.013769458873649887,
				0.014180581304016227, 0.014595821882698035, 0.015015138835406838, 0.015438489546663936,
				0.015865830552557192, 0.016297117533715322, 0.016732305308511997, 0.017171347826509087,
				0.01761419816215315, 0.01806080850873648, 0.01851113017263195, 0.01896511356781505,
				0.019422708210685258, 0.019883862715197043, 0.020348524788311173, 0.020816641225780308,
				0.021288157908278427, 0.02176301979788453, 0.02224117093493494, 0.02272255443525084,
				0.023207112487755976, 0.02369478635249278, 0.024185516359047976, 0.02467924190539883,
				0.025175901457188954, 0.0256754325474442, 0.026177771776738745, 0.026682854813820045,
				0.027190616396701617, 0.027700990334233677, 0.028213909508158275, 0.028729305875659916,
				0.029247110472415683, 0.029767253416155826, 0.03028966391074006, 0.030814270250756448,
				0.03134099982664895, 0.03186977913038136, 0.032400533761639094, 0.03293318843457815,
				0.03346766698512171, 0.03400389237881196, 0.03454178671921704, 0.03508127125689875,
				0.035622266398941616, 0.036164691719045794, 0.03670846596818611, 0.03725350708583419,
				0.037799732211749815, 0.03834705769833402, 0.038895399123549446, 0.03944467130440088,
				0.039994788310977025, 0.04054566348104949, 0.041097209435225546, 0.041649338092649146,
				0.042201960687249906, 0.04275498778452724, 0.04330832929887185, 0.043861894511411426,
				0.04441559208837742, 0.044969330099983607, 0.04552301603980602, 0.0460765568446605, 0.04662985891496274,
				0.04718282813556296, 0.04773536989704574, 0.04828738911748187, 0.04883879026462057, 0.04938947737851018,
				0.04993935409453554, 0.05048832366685685, 0.051036288992236445, 0.051583152634241514,
				0.05212881684780446, 0.052673183604129536, 0.05321615461592677, 0.05375763136296052,
				0.05429751511789438, 0.054835706972416354, 0.05537210786362823, 0.05590661860068047,
				0.056439139891638734, 0.05696957237055933, 0.05749781662476061, 0.05802377322227059,
				0.05854734273943196, 0.059068425788647794, 0.059586923046249574, 0.06010273528046828,
				0.060615763379491705, 0.061125908379589755, 0.06163307149328712, 0.062137154137569484,
				0.06263805796210109, 0.0631356848774387, 0.06362993708322295, 0.06412071709632972, 0.06460792777896496,
				0.06509147236668356, 0.06557125449632017, 0.06604717823380923, 0.06651914810188342, 0.06698706910763186,
				0.06745084676990254, 0.06791038714653497, 0.06836559686140797, 0.06881638313128668, 0.06926265379245844,
				0.06970431732713844, 0.0701412828896395, 0.07057346033228551, 0.0710007602310635, 0.0714230939109971,
				0.07184037347123484, 0.07225251180983938, 0.07265942264827019, 0.07306102055554842, 0.0734572209720954,
				0.0738479402332376, 0.07423309559236857, 0.07461260524376168, 0.07498638834502558, 0.07535436503919812,
				0.07571645647647152, 0.07607258483554358, 0.0764226733445913, 0.07676664630186214, 0.07710442909587911,
				0.07743594822525723, 0.0777611313181289, 0.07807990715117386, 0.07839220566825589, 0.07869795799866175,
				0.07899709647494257, 0.07928955465035858, 0.07957526731592535, 0.0798541705170629, 0.08012620156984906,
				0.08039129907687714, 0.08064940294272005, 0.0809004543890024, 0.08114439596908352, 0.08138117158235236,
				0.08161072648813839, 0.08183300731924004, 0.08204796209507537, 0.08225554023445603, 0.08245569256799046,
				0.08264837135011782, 0.082833530270778, 0.08301112446671977, 0.0831811105324527, 0.08334344653084491,
				0.08349809200337355, 0.08364500798002816, 0.08378415698887354, 0.08391550306527529, 0.08403901176079165,
				0.08415465015173673, 0.08426238684741594, 0.08436219199803974, 0.08445403730231993, 0.08453789601474704,
				0.08461374295255875, 0.08468155450239567, 0.08474130862665175, 0.08479298486952058, 0.08483656436273812,
				0.08487202983102637, 0.08489936559723865, 0.08491855758720845, 0.08492959333430061, 0.08493246198367088,
				0.08492715429622899, 0.08491366265230949, 0.08489198105504703, 0.0848621051334606, 0.08482403214523926,
				0.08477776097923584, 0.0847232921576605, 0.08466062783797856, 0.08458977181450489, 0.0845107295196974,
				0.0844235080251442, 0.08432811604224244, 0.08422456392256472, 0.08411286365791082, 0.08399302888003946,
				0.08386507486007666, 0.0837290185075964, 0.08358487836936701, 0.08343267462776138, 0.08327242909882215,
				0.08310416522997854, 0.08292790809740858, 0.08274368440304025, 0.08255152247118547, 0.08235145224480078,
				0.08214350528136694, 0.08192771474838323, 0.08170411541846612, 0.081472743664049, 0.08123363745167245,
				0.08098683633586046, 0.08073238145257366, 0.08047031551223505, 0.08020068279231618, 0.07992352912948264,
				0.07963890191128675, 0.07934685006740338, 0.07904742406040122, 0.0787406758760415, 0.07842665901310053,
				0.07810542847270607, 0.07777704074718439 };
		ArrayList<Double> testArray = new ArrayList<Double>(Arrays.asList(x));

		int expeceted = 38;
		assertEquals(expeceted, Lstm.findGlobalMinima(testArray));

		// signChangeInList

	}

}
