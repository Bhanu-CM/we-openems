// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Modlepb.proto

// Protobuf Java Version: 3.25.1
package io.openems.edge.predictor.lstm.modlepb;

public final class Modlepb {
  private Modlepb() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ModlePbOrBuilder extends
      // @@protoc_insertion_point(interface_extends:io.openems.edge.predictor.lstm.modlepb.ModlePb)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 batch_track = 1;</code>
     * @return The batchTrack.
     */
    int getBatchTrack();

    /**
     * <code>int32 epoch_track = 2;</code>
     * @return The epochTrack.
     */
    int getEpochTrack();

    /**
     * <code>double rms_error_trend = 3;</code>
     * @return The rmsErrorTrend.
     */
    double getRmsErrorTrend();

    /**
     * <code>double rms_error_seasonality = 4;</code>
     * @return The rmsErrorSeasonality.
     */
    double getRmsErrorSeasonality();

    /**
     * <code>double accuracy_trend = 5;</code>
     * @return The accuracyTrend.
     */
    double getAccuracyTrend();

    /**
     * <code>double accuracy_seasonality = 6;</code>
     * @return The accuracySeasonality.
     */
    double getAccuracySeasonality();

    /**
     * <code>repeated double trend_model = 7;</code>
     * @return A list containing the trendModel.
     */
    java.util.List<java.lang.Double> getTrendModelList();
    /**
     * <code>repeated double trend_model = 7;</code>
     * @return The count of trendModel.
     */
    int getTrendModelCount();
    /**
     * <code>repeated double trend_model = 7;</code>
     * @param index The index of the element to return.
     * @return The trendModel at the given index.
     */
    double getTrendModel(int index);

    /**
     * <code>repeated double seasonality_model = 8;</code>
     * @return A list containing the seasonalityModel.
     */
    java.util.List<java.lang.Double> getSeasonalityModelList();
    /**
     * <code>repeated double seasonality_model = 8;</code>
     * @return The count of seasonalityModel.
     */
    int getSeasonalityModelCount();
    /**
     * <code>repeated double seasonality_model = 8;</code>
     * @param index The index of the element to return.
     * @return The seasonalityModel at the given index.
     */
    double getSeasonalityModel(int index);

    /**
     * <code>repeated double all_trend_model = 9;</code>
     * @return A list containing the allTrendModel.
     */
    java.util.List<java.lang.Double> getAllTrendModelList();
    /**
     * <code>repeated double all_trend_model = 9;</code>
     * @return The count of allTrendModel.
     */
    int getAllTrendModelCount();
    /**
     * <code>repeated double all_trend_model = 9;</code>
     * @param index The index of the element to return.
     * @return The allTrendModel at the given index.
     */
    double getAllTrendModel(int index);

    /**
     * <code>repeated double all_seasonality_model = 10;</code>
     * @return A list containing the allSeasonalityModel.
     */
    java.util.List<java.lang.Double> getAllSeasonalityModelList();
    /**
     * <code>repeated double all_seasonality_model = 10;</code>
     * @return The count of allSeasonalityModel.
     */
    int getAllSeasonalityModelCount();
    /**
     * <code>repeated double all_seasonality_model = 10;</code>
     * @param index The index of the element to return.
     * @return The allSeasonalityModel at the given index.
     */
    double getAllSeasonalityModel(int index);

    /**
     * <code>repeated double all_seasonality_model_rms_error = 11;</code>
     * @return A list containing the allSeasonalityModelRmsError.
     */
    java.util.List<java.lang.Double> getAllSeasonalityModelRmsErrorList();
    /**
     * <code>repeated double all_seasonality_model_rms_error = 11;</code>
     * @return The count of allSeasonalityModelRmsError.
     */
    int getAllSeasonalityModelRmsErrorCount();
    /**
     * <code>repeated double all_seasonality_model_rms_error = 11;</code>
     * @param index The index of the element to return.
     * @return The allSeasonalityModelRmsError at the given index.
     */
    double getAllSeasonalityModelRmsError(int index);

    /**
     * <code>repeated double all_trend_model_rms_error = 12;</code>
     * @return A list containing the allTrendModelRmsError.
     */
    java.util.List<java.lang.Double> getAllTrendModelRmsErrorList();
    /**
     * <code>repeated double all_trend_model_rms_error = 12;</code>
     * @return The count of allTrendModelRmsError.
     */
    int getAllTrendModelRmsErrorCount();
    /**
     * <code>repeated double all_trend_model_rms_error = 12;</code>
     * @param index The index of the element to return.
     * @return The allTrendModelRmsError at the given index.
     */
    double getAllTrendModelRmsError(int index);
  }
  /**
   * Protobuf type {@code io.openems.edge.predictor.lstm.modlepb.ModlePb}
   */
  public static final class ModlePb extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:io.openems.edge.predictor.lstm.modlepb.ModlePb)
      ModlePbOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ModlePb.newBuilder() to construct.
    private ModlePb(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ModlePb() {
      trendModel_ = emptyDoubleList();
      seasonalityModel_ = emptyDoubleList();
      allTrendModel_ = emptyDoubleList();
      allSeasonalityModel_ = emptyDoubleList();
      allSeasonalityModelRmsError_ = emptyDoubleList();
      allTrendModelRmsError_ = emptyDoubleList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ModlePb();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.openems.edge.predictor.lstm.modlepb.Modlepb.internal_static_io_openems_edge_predictor_lstm_modlepb_ModlePb_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.openems.edge.predictor.lstm.modlepb.Modlepb.internal_static_io_openems_edge_predictor_lstm_modlepb_ModlePb_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.openems.edge.predictor.lstm.modlepb.Modlepb.ModlePb.class, io.openems.edge.predictor.lstm.modlepb.Modlepb.ModlePb.Builder.class);
    }

    public static final int BATCH_TRACK_FIELD_NUMBER = 1;
    private int batchTrack_ = 0;
    /**
     * <code>int32 batch_track = 1;</code>
     * @return The batchTrack.
     */
    @java.lang.Override
    public int getBatchTrack() {
      return batchTrack_;
    }

    public static final int EPOCH_TRACK_FIELD_NUMBER = 2;
    private int epochTrack_ = 0;
    /**
     * <code>int32 epoch_track = 2;</code>
     * @return The epochTrack.
     */
    @java.lang.Override
    public int getEpochTrack() {
      return epochTrack_;
    }

    public static final int RMS_ERROR_TREND_FIELD_NUMBER = 3;
    private double rmsErrorTrend_ = 0D;
    /**
     * <code>double rms_error_trend = 3;</code>
     * @return The rmsErrorTrend.
     */
    @java.lang.Override
    public double getRmsErrorTrend() {
      return rmsErrorTrend_;
    }

    public static final int RMS_ERROR_SEASONALITY_FIELD_NUMBER = 4;
    private double rmsErrorSeasonality_ = 0D;
    /**
     * <code>double rms_error_seasonality = 4;</code>
     * @return The rmsErrorSeasonality.
     */
    @java.lang.Override
    public double getRmsErrorSeasonality() {
      return rmsErrorSeasonality_;
    }

    public static final int ACCURACY_TREND_FIELD_NUMBER = 5;
    private double accuracyTrend_ = 0D;
    /**
     * <code>double accuracy_trend = 5;</code>
     * @return The accuracyTrend.
     */
    @java.lang.Override
    public double getAccuracyTrend() {
      return accuracyTrend_;
    }

    public static final int ACCURACY_SEASONALITY_FIELD_NUMBER = 6;
    private double accuracySeasonality_ = 0D;
    /**
     * <code>double accuracy_seasonality = 6;</code>
     * @return The accuracySeasonality.
     */
    @java.lang.Override
    public double getAccuracySeasonality() {
      return accuracySeasonality_;
    }

    public static final int TREND_MODEL_FIELD_NUMBER = 7;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.DoubleList trendModel_ =
        emptyDoubleList();
    /**
     * <code>repeated double trend_model = 7;</code>
     * @return A list containing the trendModel.
     */
    @java.lang.Override
    public java.util.List<java.lang.Double>
        getTrendModelList() {
      return trendModel_;
    }
    /**
     * <code>repeated double trend_model = 7;</code>
     * @return The count of trendModel.
     */
    public int getTrendModelCount() {
      return trendModel_.size();
    }
    /**
     * <code>repeated double trend_model = 7;</code>
     * @param index The index of the element to return.
     * @return The trendModel at the given index.
     */
    public double getTrendModel(int index) {
      return trendModel_.getDouble(index);
    }
    private int trendModelMemoizedSerializedSize = -1;

    public static final int SEASONALITY_MODEL_FIELD_NUMBER = 8;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.DoubleList seasonalityModel_ =
        emptyDoubleList();
    /**
     * <code>repeated double seasonality_model = 8;</code>
     * @return A list containing the seasonalityModel.
     */
    @java.lang.Override
    public java.util.List<java.lang.Double>
        getSeasonalityModelList() {
      return seasonalityModel_;
    }
    /**
     * <code>repeated double seasonality_model = 8;</code>
     * @return The count of seasonalityModel.
     */
    public int getSeasonalityModelCount() {
      return seasonalityModel_.size();
    }
    /**
     * <code>repeated double seasonality_model = 8;</code>
     * @param index The index of the element to return.
     * @return The seasonalityModel at the given index.
     */
    public double getSeasonalityModel(int index) {
      return seasonalityModel_.getDouble(index);
    }
    private int seasonalityModelMemoizedSerializedSize = -1;

    public static final int ALL_TREND_MODEL_FIELD_NUMBER = 9;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.DoubleList allTrendModel_ =
        emptyDoubleList();
    /**
     * <code>repeated double all_trend_model = 9;</code>
     * @return A list containing the allTrendModel.
     */
    @java.lang.Override
    public java.util.List<java.lang.Double>
        getAllTrendModelList() {
      return allTrendModel_;
    }
    /**
     * <code>repeated double all_trend_model = 9;</code>
     * @return The count of allTrendModel.
     */
    public int getAllTrendModelCount() {
      return allTrendModel_.size();
    }
    /**
     * <code>repeated double all_trend_model = 9;</code>
     * @param index The index of the element to return.
     * @return The allTrendModel at the given index.
     */
    public double getAllTrendModel(int index) {
      return allTrendModel_.getDouble(index);
    }
    private int allTrendModelMemoizedSerializedSize = -1;

    public static final int ALL_SEASONALITY_MODEL_FIELD_NUMBER = 10;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.DoubleList allSeasonalityModel_ =
        emptyDoubleList();
    /**
     * <code>repeated double all_seasonality_model = 10;</code>
     * @return A list containing the allSeasonalityModel.
     */
    @java.lang.Override
    public java.util.List<java.lang.Double>
        getAllSeasonalityModelList() {
      return allSeasonalityModel_;
    }
    /**
     * <code>repeated double all_seasonality_model = 10;</code>
     * @return The count of allSeasonalityModel.
     */
    public int getAllSeasonalityModelCount() {
      return allSeasonalityModel_.size();
    }
    /**
     * <code>repeated double all_seasonality_model = 10;</code>
     * @param index The index of the element to return.
     * @return The allSeasonalityModel at the given index.
     */
    public double getAllSeasonalityModel(int index) {
      return allSeasonalityModel_.getDouble(index);
    }
    private int allSeasonalityModelMemoizedSerializedSize = -1;

    public static final int ALL_SEASONALITY_MODEL_RMS_ERROR_FIELD_NUMBER = 11;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.DoubleList allSeasonalityModelRmsError_ =
        emptyDoubleList();
    /**
     * <code>repeated double all_seasonality_model_rms_error = 11;</code>
     * @return A list containing the allSeasonalityModelRmsError.
     */
    @java.lang.Override
    public java.util.List<java.lang.Double>
        getAllSeasonalityModelRmsErrorList() {
      return allSeasonalityModelRmsError_;
    }
    /**
     * <code>repeated double all_seasonality_model_rms_error = 11;</code>
     * @return The count of allSeasonalityModelRmsError.
     */
    public int getAllSeasonalityModelRmsErrorCount() {
      return allSeasonalityModelRmsError_.size();
    }
    /**
     * <code>repeated double all_seasonality_model_rms_error = 11;</code>
     * @param index The index of the element to return.
     * @return The allSeasonalityModelRmsError at the given index.
     */
    public double getAllSeasonalityModelRmsError(int index) {
      return allSeasonalityModelRmsError_.getDouble(index);
    }
    private int allSeasonalityModelRmsErrorMemoizedSerializedSize = -1;

    public static final int ALL_TREND_MODEL_RMS_ERROR_FIELD_NUMBER = 12;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.DoubleList allTrendModelRmsError_ =
        emptyDoubleList();
    /**
     * <code>repeated double all_trend_model_rms_error = 12;</code>
     * @return A list containing the allTrendModelRmsError.
     */
    @java.lang.Override
    public java.util.List<java.lang.Double>
        getAllTrendModelRmsErrorList() {
      return allTrendModelRmsError_;
    }
    /**
     * <code>repeated double all_trend_model_rms_error = 12;</code>
     * @return The count of allTrendModelRmsError.
     */
    public int getAllTrendModelRmsErrorCount() {
      return allTrendModelRmsError_.size();
    }
    /**
     * <code>repeated double all_trend_model_rms_error = 12;</code>
     * @param index The index of the element to return.
     * @return The allTrendModelRmsError at the given index.
     */
    public double getAllTrendModelRmsError(int index) {
      return allTrendModelRmsError_.getDouble(index);
    }
    private int allTrendModelRmsErrorMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (batchTrack_ != 0) {
        output.writeInt32(1, batchTrack_);
      }
      if (epochTrack_ != 0) {
        output.writeInt32(2, epochTrack_);
      }
      if (java.lang.Double.doubleToRawLongBits(rmsErrorTrend_) != 0) {
        output.writeDouble(3, rmsErrorTrend_);
      }
      if (java.lang.Double.doubleToRawLongBits(rmsErrorSeasonality_) != 0) {
        output.writeDouble(4, rmsErrorSeasonality_);
      }
      if (java.lang.Double.doubleToRawLongBits(accuracyTrend_) != 0) {
        output.writeDouble(5, accuracyTrend_);
      }
      if (java.lang.Double.doubleToRawLongBits(accuracySeasonality_) != 0) {
        output.writeDouble(6, accuracySeasonality_);
      }
      if (getTrendModelList().size() > 0) {
        output.writeUInt32NoTag(58);
        output.writeUInt32NoTag(trendModelMemoizedSerializedSize);
      }
      for (int i = 0; i < trendModel_.size(); i++) {
        output.writeDoubleNoTag(trendModel_.getDouble(i));
      }
      if (getSeasonalityModelList().size() > 0) {
        output.writeUInt32NoTag(66);
        output.writeUInt32NoTag(seasonalityModelMemoizedSerializedSize);
      }
      for (int i = 0; i < seasonalityModel_.size(); i++) {
        output.writeDoubleNoTag(seasonalityModel_.getDouble(i));
      }
      if (getAllTrendModelList().size() > 0) {
        output.writeUInt32NoTag(74);
        output.writeUInt32NoTag(allTrendModelMemoizedSerializedSize);
      }
      for (int i = 0; i < allTrendModel_.size(); i++) {
        output.writeDoubleNoTag(allTrendModel_.getDouble(i));
      }
      if (getAllSeasonalityModelList().size() > 0) {
        output.writeUInt32NoTag(82);
        output.writeUInt32NoTag(allSeasonalityModelMemoizedSerializedSize);
      }
      for (int i = 0; i < allSeasonalityModel_.size(); i++) {
        output.writeDoubleNoTag(allSeasonalityModel_.getDouble(i));
      }
      if (getAllSeasonalityModelRmsErrorList().size() > 0) {
        output.writeUInt32NoTag(90);
        output.writeUInt32NoTag(allSeasonalityModelRmsErrorMemoizedSerializedSize);
      }
      for (int i = 0; i < allSeasonalityModelRmsError_.size(); i++) {
        output.writeDoubleNoTag(allSeasonalityModelRmsError_.getDouble(i));
      }
      if (getAllTrendModelRmsErrorList().size() > 0) {
        output.writeUInt32NoTag(98);
        output.writeUInt32NoTag(allTrendModelRmsErrorMemoizedSerializedSize);
      }
      for (int i = 0; i < allTrendModelRmsError_.size(); i++) {
        output.writeDoubleNoTag(allTrendModelRmsError_.getDouble(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (batchTrack_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, batchTrack_);
      }
      if (epochTrack_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, epochTrack_);
      }
      if (java.lang.Double.doubleToRawLongBits(rmsErrorTrend_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, rmsErrorTrend_);
      }
      if (java.lang.Double.doubleToRawLongBits(rmsErrorSeasonality_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, rmsErrorSeasonality_);
      }
      if (java.lang.Double.doubleToRawLongBits(accuracyTrend_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, accuracyTrend_);
      }
      if (java.lang.Double.doubleToRawLongBits(accuracySeasonality_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(6, accuracySeasonality_);
      }
      {
        int dataSize = 0;
        dataSize = 8 * getTrendModelList().size();
        size += dataSize;
        if (!getTrendModelList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        trendModelMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        dataSize = 8 * getSeasonalityModelList().size();
        size += dataSize;
        if (!getSeasonalityModelList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        seasonalityModelMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        dataSize = 8 * getAllTrendModelList().size();
        size += dataSize;
        if (!getAllTrendModelList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        allTrendModelMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        dataSize = 8 * getAllSeasonalityModelList().size();
        size += dataSize;
        if (!getAllSeasonalityModelList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        allSeasonalityModelMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        dataSize = 8 * getAllSeasonalityModelRmsErrorList().size();
        size += dataSize;
        if (!getAllSeasonalityModelRmsErrorList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        allSeasonalityModelRmsErrorMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        dataSize = 8 * getAllTrendModelRmsErrorList().size();
        size += dataSize;
        if (!getAllTrendModelRmsErrorList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        allTrendModelRmsErrorMemoizedSerializedSize = dataSize;
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.openems.edge.predictor.lstm.modlepb.Modlepb.ModlePb)) {
        return super.equals(obj);
      }
      io.openems.edge.predictor.lstm.modlepb.Modlepb.ModlePb other = (io.openems.edge.predictor.lstm.modlepb.Modlepb.ModlePb) obj;

      if (getBatchTrack()
          != other.getBatchTrack()) return false;
      if (getEpochTrack()
          != other.getEpochTrack()) return false;
      if (java.lang.Double.doubleToLongBits(getRmsErrorTrend())
          != java.lang.Double.doubleToLongBits(
              other.getRmsErrorTrend())) return false;
      if (java.lang.Double.doubleToLongBits(getRmsErrorSeasonality())
          != java.lang.Double.doubleToLongBits(
              other.getRmsErrorSeasonality())) return false;
      if (java.lang.Double.doubleToLongBits(getAccuracyTrend())
          != java.lang.Double.doubleToLongBits(
              other.getAccuracyTrend())) return false;
      if (java.lang.Double.doubleToLongBits(getAccuracySeasonality())
          != java.lang.Double.doubleToLongBits(
              other.getAccuracySeasonality())) return false;
      if (!getTrendModelList()
          .equals(other.getTrendModelList())) return false;
      if (!getSeasonalityModelList()
          .equals(other.getSeasonalityModelList())) return false;
      if (!getAllTrendModelList()
          .equals(other.getAllTrendModelList())) return false;
      if (!getAllSeasonalityModelList()
          .equals(other.getAllSeasonalityModelList())) return false;
      if (!getAllSeasonalityModelRmsErrorList()
          .equals(other.getAllSeasonalityModelRmsErrorList())) return false;
      if (!getAllTrendModelRmsErrorList()
          .equals(other.getAllTrendModelRmsErrorList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + BATCH_TRACK_FIELD_NUMBER;
      hash = (53 * hash) + getBatchTrack();
      hash = (37 * hash) + EPOCH_TRACK_FIELD_NUMBER;
      hash = (53 * hash) + getEpochTrack();
      hash = (37 * hash) + RMS_ERROR_TREND_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getRmsErrorTrend()));
      hash = (37 * hash) + RMS_ERROR_SEASONALITY_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getRmsErrorSeasonality()));
      hash = (37 * hash) + ACCURACY_TREND_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getAccuracyTrend()));
      hash = (37 * hash) + ACCURACY_SEASONALITY_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getAccuracySeasonality()));
      if (getTrendModelCount() > 0) {
        hash = (37 * hash) + TREND_MODEL_FIELD_NUMBER;
        hash = (53 * hash) + getTrendModelList().hashCode();
      }
      if (getSeasonalityModelCount() > 0) {
        hash = (37 * hash) + SEASONALITY_MODEL_FIELD_NUMBER;
        hash = (53 * hash) + getSeasonalityModelList().hashCode();
      }
      if (getAllTrendModelCount() > 0) {
        hash = (37 * hash) + ALL_TREND_MODEL_FIELD_NUMBER;
        hash = (53 * hash) + getAllTrendModelList().hashCode();
      }
      if (getAllSeasonalityModelCount() > 0) {
        hash = (37 * hash) + ALL_SEASONALITY_MODEL_FIELD_NUMBER;
        hash = (53 * hash) + getAllSeasonalityModelList().hashCode();
      }
      if (getAllSeasonalityModelRmsErrorCount() > 0) {
        hash = (37 * hash) + ALL_SEASONALITY_MODEL_RMS_ERROR_FIELD_NUMBER;
        hash = (53 * hash) + getAllSeasonalityModelRmsErrorList().hashCode();
      }
      if (getAllTrendModelRmsErrorCount() > 0) {
        hash = (37 * hash) + ALL_TREND_MODEL_RMS_ERROR_FIELD_NUMBER;
        hash = (53 * hash) + getAllTrendModelRmsErrorList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.openems.edge.predictor.lstm.modlepb.Modlepb.ModlePb parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.openems.edge.predictor.lstm.modlepb.Modlepb.ModlePb parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.openems.edge.predictor.lstm.modlepb.Modlepb.ModlePb parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.openems.edge.predictor.lstm.modlepb.Modlepb.ModlePb parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.openems.edge.predictor.lstm.modlepb.Modlepb.ModlePb parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.openems.edge.predictor.lstm.modlepb.Modlepb.ModlePb parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.openems.edge.predictor.lstm.modlepb.Modlepb.ModlePb parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.openems.edge.predictor.lstm.modlepb.Modlepb.ModlePb parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static io.openems.edge.predictor.lstm.modlepb.Modlepb.ModlePb parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static io.openems.edge.predictor.lstm.modlepb.Modlepb.ModlePb parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.openems.edge.predictor.lstm.modlepb.Modlepb.ModlePb parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.openems.edge.predictor.lstm.modlepb.Modlepb.ModlePb parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.openems.edge.predictor.lstm.modlepb.Modlepb.ModlePb prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code io.openems.edge.predictor.lstm.modlepb.ModlePb}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:io.openems.edge.predictor.lstm.modlepb.ModlePb)
        io.openems.edge.predictor.lstm.modlepb.Modlepb.ModlePbOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.openems.edge.predictor.lstm.modlepb.Modlepb.internal_static_io_openems_edge_predictor_lstm_modlepb_ModlePb_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.openems.edge.predictor.lstm.modlepb.Modlepb.internal_static_io_openems_edge_predictor_lstm_modlepb_ModlePb_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.openems.edge.predictor.lstm.modlepb.Modlepb.ModlePb.class, io.openems.edge.predictor.lstm.modlepb.Modlepb.ModlePb.Builder.class);
      }

      // Construct using io.openems.edge.predictor.lstm.modlepb.Modlepb.ModlePb.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        batchTrack_ = 0;
        epochTrack_ = 0;
        rmsErrorTrend_ = 0D;
        rmsErrorSeasonality_ = 0D;
        accuracyTrend_ = 0D;
        accuracySeasonality_ = 0D;
        trendModel_ = emptyDoubleList();
        seasonalityModel_ = emptyDoubleList();
        allTrendModel_ = emptyDoubleList();
        allSeasonalityModel_ = emptyDoubleList();
        allSeasonalityModelRmsError_ = emptyDoubleList();
        allTrendModelRmsError_ = emptyDoubleList();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.openems.edge.predictor.lstm.modlepb.Modlepb.internal_static_io_openems_edge_predictor_lstm_modlepb_ModlePb_descriptor;
      }

      @java.lang.Override
      public io.openems.edge.predictor.lstm.modlepb.Modlepb.ModlePb getDefaultInstanceForType() {
        return io.openems.edge.predictor.lstm.modlepb.Modlepb.ModlePb.getDefaultInstance();
      }

      @java.lang.Override
      public io.openems.edge.predictor.lstm.modlepb.Modlepb.ModlePb build() {
        io.openems.edge.predictor.lstm.modlepb.Modlepb.ModlePb result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.openems.edge.predictor.lstm.modlepb.Modlepb.ModlePb buildPartial() {
        io.openems.edge.predictor.lstm.modlepb.Modlepb.ModlePb result = new io.openems.edge.predictor.lstm.modlepb.Modlepb.ModlePb(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(io.openems.edge.predictor.lstm.modlepb.Modlepb.ModlePb result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.batchTrack_ = batchTrack_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.epochTrack_ = epochTrack_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.rmsErrorTrend_ = rmsErrorTrend_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.rmsErrorSeasonality_ = rmsErrorSeasonality_;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.accuracyTrend_ = accuracyTrend_;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.accuracySeasonality_ = accuracySeasonality_;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          trendModel_.makeImmutable();
          result.trendModel_ = trendModel_;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          seasonalityModel_.makeImmutable();
          result.seasonalityModel_ = seasonalityModel_;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          allTrendModel_.makeImmutable();
          result.allTrendModel_ = allTrendModel_;
        }
        if (((from_bitField0_ & 0x00000200) != 0)) {
          allSeasonalityModel_.makeImmutable();
          result.allSeasonalityModel_ = allSeasonalityModel_;
        }
        if (((from_bitField0_ & 0x00000400) != 0)) {
          allSeasonalityModelRmsError_.makeImmutable();
          result.allSeasonalityModelRmsError_ = allSeasonalityModelRmsError_;
        }
        if (((from_bitField0_ & 0x00000800) != 0)) {
          allTrendModelRmsError_.makeImmutable();
          result.allTrendModelRmsError_ = allTrendModelRmsError_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.openems.edge.predictor.lstm.modlepb.Modlepb.ModlePb) {
          return mergeFrom((io.openems.edge.predictor.lstm.modlepb.Modlepb.ModlePb)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.openems.edge.predictor.lstm.modlepb.Modlepb.ModlePb other) {
        if (other == io.openems.edge.predictor.lstm.modlepb.Modlepb.ModlePb.getDefaultInstance()) return this;
        if (other.getBatchTrack() != 0) {
          setBatchTrack(other.getBatchTrack());
        }
        if (other.getEpochTrack() != 0) {
          setEpochTrack(other.getEpochTrack());
        }
        if (other.getRmsErrorTrend() != 0D) {
          setRmsErrorTrend(other.getRmsErrorTrend());
        }
        if (other.getRmsErrorSeasonality() != 0D) {
          setRmsErrorSeasonality(other.getRmsErrorSeasonality());
        }
        if (other.getAccuracyTrend() != 0D) {
          setAccuracyTrend(other.getAccuracyTrend());
        }
        if (other.getAccuracySeasonality() != 0D) {
          setAccuracySeasonality(other.getAccuracySeasonality());
        }
        if (!other.trendModel_.isEmpty()) {
          if (trendModel_.isEmpty()) {
            trendModel_ = other.trendModel_;
            trendModel_.makeImmutable();
            bitField0_ |= 0x00000040;
          } else {
            ensureTrendModelIsMutable();
            trendModel_.addAll(other.trendModel_);
          }
          onChanged();
        }
        if (!other.seasonalityModel_.isEmpty()) {
          if (seasonalityModel_.isEmpty()) {
            seasonalityModel_ = other.seasonalityModel_;
            seasonalityModel_.makeImmutable();
            bitField0_ |= 0x00000080;
          } else {
            ensureSeasonalityModelIsMutable();
            seasonalityModel_.addAll(other.seasonalityModel_);
          }
          onChanged();
        }
        if (!other.allTrendModel_.isEmpty()) {
          if (allTrendModel_.isEmpty()) {
            allTrendModel_ = other.allTrendModel_;
            allTrendModel_.makeImmutable();
            bitField0_ |= 0x00000100;
          } else {
            ensureAllTrendModelIsMutable();
            allTrendModel_.addAll(other.allTrendModel_);
          }
          onChanged();
        }
        if (!other.allSeasonalityModel_.isEmpty()) {
          if (allSeasonalityModel_.isEmpty()) {
            allSeasonalityModel_ = other.allSeasonalityModel_;
            allSeasonalityModel_.makeImmutable();
            bitField0_ |= 0x00000200;
          } else {
            ensureAllSeasonalityModelIsMutable();
            allSeasonalityModel_.addAll(other.allSeasonalityModel_);
          }
          onChanged();
        }
        if (!other.allSeasonalityModelRmsError_.isEmpty()) {
          if (allSeasonalityModelRmsError_.isEmpty()) {
            allSeasonalityModelRmsError_ = other.allSeasonalityModelRmsError_;
            allSeasonalityModelRmsError_.makeImmutable();
            bitField0_ |= 0x00000400;
          } else {
            ensureAllSeasonalityModelRmsErrorIsMutable();
            allSeasonalityModelRmsError_.addAll(other.allSeasonalityModelRmsError_);
          }
          onChanged();
        }
        if (!other.allTrendModelRmsError_.isEmpty()) {
          if (allTrendModelRmsError_.isEmpty()) {
            allTrendModelRmsError_ = other.allTrendModelRmsError_;
            allTrendModelRmsError_.makeImmutable();
            bitField0_ |= 0x00000800;
          } else {
            ensureAllTrendModelRmsErrorIsMutable();
            allTrendModelRmsError_.addAll(other.allTrendModelRmsError_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                batchTrack_ = input.readInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                epochTrack_ = input.readInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 25: {
                rmsErrorTrend_ = input.readDouble();
                bitField0_ |= 0x00000004;
                break;
              } // case 25
              case 33: {
                rmsErrorSeasonality_ = input.readDouble();
                bitField0_ |= 0x00000008;
                break;
              } // case 33
              case 41: {
                accuracyTrend_ = input.readDouble();
                bitField0_ |= 0x00000010;
                break;
              } // case 41
              case 49: {
                accuracySeasonality_ = input.readDouble();
                bitField0_ |= 0x00000020;
                break;
              } // case 49
              case 57: {
                double v = input.readDouble();
                ensureTrendModelIsMutable();
                trendModel_.addDouble(v);
                break;
              } // case 57
              case 58: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                int alloc = length > 4096 ? 4096 : length;
                ensureTrendModelIsMutable(alloc / 8);
                while (input.getBytesUntilLimit() > 0) {
                  trendModel_.addDouble(input.readDouble());
                }
                input.popLimit(limit);
                break;
              } // case 58
              case 65: {
                double v = input.readDouble();
                ensureSeasonalityModelIsMutable();
                seasonalityModel_.addDouble(v);
                break;
              } // case 65
              case 66: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                int alloc = length > 4096 ? 4096 : length;
                ensureSeasonalityModelIsMutable(alloc / 8);
                while (input.getBytesUntilLimit() > 0) {
                  seasonalityModel_.addDouble(input.readDouble());
                }
                input.popLimit(limit);
                break;
              } // case 66
              case 73: {
                double v = input.readDouble();
                ensureAllTrendModelIsMutable();
                allTrendModel_.addDouble(v);
                break;
              } // case 73
              case 74: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                int alloc = length > 4096 ? 4096 : length;
                ensureAllTrendModelIsMutable(alloc / 8);
                while (input.getBytesUntilLimit() > 0) {
                  allTrendModel_.addDouble(input.readDouble());
                }
                input.popLimit(limit);
                break;
              } // case 74
              case 81: {
                double v = input.readDouble();
                ensureAllSeasonalityModelIsMutable();
                allSeasonalityModel_.addDouble(v);
                break;
              } // case 81
              case 82: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                int alloc = length > 4096 ? 4096 : length;
                ensureAllSeasonalityModelIsMutable(alloc / 8);
                while (input.getBytesUntilLimit() > 0) {
                  allSeasonalityModel_.addDouble(input.readDouble());
                }
                input.popLimit(limit);
                break;
              } // case 82
              case 89: {
                double v = input.readDouble();
                ensureAllSeasonalityModelRmsErrorIsMutable();
                allSeasonalityModelRmsError_.addDouble(v);
                break;
              } // case 89
              case 90: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                int alloc = length > 4096 ? 4096 : length;
                ensureAllSeasonalityModelRmsErrorIsMutable(alloc / 8);
                while (input.getBytesUntilLimit() > 0) {
                  allSeasonalityModelRmsError_.addDouble(input.readDouble());
                }
                input.popLimit(limit);
                break;
              } // case 90
              case 97: {
                double v = input.readDouble();
                ensureAllTrendModelRmsErrorIsMutable();
                allTrendModelRmsError_.addDouble(v);
                break;
              } // case 97
              case 98: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                int alloc = length > 4096 ? 4096 : length;
                ensureAllTrendModelRmsErrorIsMutable(alloc / 8);
                while (input.getBytesUntilLimit() > 0) {
                  allTrendModelRmsError_.addDouble(input.readDouble());
                }
                input.popLimit(limit);
                break;
              } // case 98
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int batchTrack_ ;
      /**
       * <code>int32 batch_track = 1;</code>
       * @return The batchTrack.
       */
      @java.lang.Override
      public int getBatchTrack() {
        return batchTrack_;
      }
      /**
       * <code>int32 batch_track = 1;</code>
       * @param value The batchTrack to set.
       * @return This builder for chaining.
       */
      public Builder setBatchTrack(int value) {

        batchTrack_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>int32 batch_track = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearBatchTrack() {
        bitField0_ = (bitField0_ & ~0x00000001);
        batchTrack_ = 0;
        onChanged();
        return this;
      }

      private int epochTrack_ ;
      /**
       * <code>int32 epoch_track = 2;</code>
       * @return The epochTrack.
       */
      @java.lang.Override
      public int getEpochTrack() {
        return epochTrack_;
      }
      /**
       * <code>int32 epoch_track = 2;</code>
       * @param value The epochTrack to set.
       * @return This builder for chaining.
       */
      public Builder setEpochTrack(int value) {

        epochTrack_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>int32 epoch_track = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearEpochTrack() {
        bitField0_ = (bitField0_ & ~0x00000002);
        epochTrack_ = 0;
        onChanged();
        return this;
      }

      private double rmsErrorTrend_ ;
      /**
       * <code>double rms_error_trend = 3;</code>
       * @return The rmsErrorTrend.
       */
      @java.lang.Override
      public double getRmsErrorTrend() {
        return rmsErrorTrend_;
      }
      /**
       * <code>double rms_error_trend = 3;</code>
       * @param value The rmsErrorTrend to set.
       * @return This builder for chaining.
       */
      public Builder setRmsErrorTrend(double value) {

        rmsErrorTrend_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>double rms_error_trend = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearRmsErrorTrend() {
        bitField0_ = (bitField0_ & ~0x00000004);
        rmsErrorTrend_ = 0D;
        onChanged();
        return this;
      }

      private double rmsErrorSeasonality_ ;
      /**
       * <code>double rms_error_seasonality = 4;</code>
       * @return The rmsErrorSeasonality.
       */
      @java.lang.Override
      public double getRmsErrorSeasonality() {
        return rmsErrorSeasonality_;
      }
      /**
       * <code>double rms_error_seasonality = 4;</code>
       * @param value The rmsErrorSeasonality to set.
       * @return This builder for chaining.
       */
      public Builder setRmsErrorSeasonality(double value) {

        rmsErrorSeasonality_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>double rms_error_seasonality = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearRmsErrorSeasonality() {
        bitField0_ = (bitField0_ & ~0x00000008);
        rmsErrorSeasonality_ = 0D;
        onChanged();
        return this;
      }

      private double accuracyTrend_ ;
      /**
       * <code>double accuracy_trend = 5;</code>
       * @return The accuracyTrend.
       */
      @java.lang.Override
      public double getAccuracyTrend() {
        return accuracyTrend_;
      }
      /**
       * <code>double accuracy_trend = 5;</code>
       * @param value The accuracyTrend to set.
       * @return This builder for chaining.
       */
      public Builder setAccuracyTrend(double value) {

        accuracyTrend_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>double accuracy_trend = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearAccuracyTrend() {
        bitField0_ = (bitField0_ & ~0x00000010);
        accuracyTrend_ = 0D;
        onChanged();
        return this;
      }

      private double accuracySeasonality_ ;
      /**
       * <code>double accuracy_seasonality = 6;</code>
       * @return The accuracySeasonality.
       */
      @java.lang.Override
      public double getAccuracySeasonality() {
        return accuracySeasonality_;
      }
      /**
       * <code>double accuracy_seasonality = 6;</code>
       * @param value The accuracySeasonality to set.
       * @return This builder for chaining.
       */
      public Builder setAccuracySeasonality(double value) {

        accuracySeasonality_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>double accuracy_seasonality = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearAccuracySeasonality() {
        bitField0_ = (bitField0_ & ~0x00000020);
        accuracySeasonality_ = 0D;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.DoubleList trendModel_ = emptyDoubleList();
      private void ensureTrendModelIsMutable() {
        if (!trendModel_.isModifiable()) {
          trendModel_ = makeMutableCopy(trendModel_);
        }
        bitField0_ |= 0x00000040;
      }
      private void ensureTrendModelIsMutable(int capacity) {
        if (!trendModel_.isModifiable()) {
          trendModel_ = makeMutableCopy(trendModel_, capacity);
        }
        bitField0_ |= 0x00000040;
      }
      /**
       * <code>repeated double trend_model = 7;</code>
       * @return A list containing the trendModel.
       */
      public java.util.List<java.lang.Double>
          getTrendModelList() {
        trendModel_.makeImmutable();
        return trendModel_;
      }
      /**
       * <code>repeated double trend_model = 7;</code>
       * @return The count of trendModel.
       */
      public int getTrendModelCount() {
        return trendModel_.size();
      }
      /**
       * <code>repeated double trend_model = 7;</code>
       * @param index The index of the element to return.
       * @return The trendModel at the given index.
       */
      public double getTrendModel(int index) {
        return trendModel_.getDouble(index);
      }
      /**
       * <code>repeated double trend_model = 7;</code>
       * @param index The index to set the value at.
       * @param value The trendModel to set.
       * @return This builder for chaining.
       */
      public Builder setTrendModel(
          int index, double value) {

        ensureTrendModelIsMutable();
        trendModel_.setDouble(index, value);
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <code>repeated double trend_model = 7;</code>
       * @param value The trendModel to add.
       * @return This builder for chaining.
       */
      public Builder addTrendModel(double value) {

        ensureTrendModelIsMutable();
        trendModel_.addDouble(value);
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <code>repeated double trend_model = 7;</code>
       * @param values The trendModel to add.
       * @return This builder for chaining.
       */
      public Builder addAllTrendModel(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureTrendModelIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, trendModel_);
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <code>repeated double trend_model = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearTrendModel() {
        trendModel_ = emptyDoubleList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.DoubleList seasonalityModel_ = emptyDoubleList();
      private void ensureSeasonalityModelIsMutable() {
        if (!seasonalityModel_.isModifiable()) {
          seasonalityModel_ = makeMutableCopy(seasonalityModel_);
        }
        bitField0_ |= 0x00000080;
      }
      private void ensureSeasonalityModelIsMutable(int capacity) {
        if (!seasonalityModel_.isModifiable()) {
          seasonalityModel_ = makeMutableCopy(seasonalityModel_, capacity);
        }
        bitField0_ |= 0x00000080;
      }
      /**
       * <code>repeated double seasonality_model = 8;</code>
       * @return A list containing the seasonalityModel.
       */
      public java.util.List<java.lang.Double>
          getSeasonalityModelList() {
        seasonalityModel_.makeImmutable();
        return seasonalityModel_;
      }
      /**
       * <code>repeated double seasonality_model = 8;</code>
       * @return The count of seasonalityModel.
       */
      public int getSeasonalityModelCount() {
        return seasonalityModel_.size();
      }
      /**
       * <code>repeated double seasonality_model = 8;</code>
       * @param index The index of the element to return.
       * @return The seasonalityModel at the given index.
       */
      public double getSeasonalityModel(int index) {
        return seasonalityModel_.getDouble(index);
      }
      /**
       * <code>repeated double seasonality_model = 8;</code>
       * @param index The index to set the value at.
       * @param value The seasonalityModel to set.
       * @return This builder for chaining.
       */
      public Builder setSeasonalityModel(
          int index, double value) {

        ensureSeasonalityModelIsMutable();
        seasonalityModel_.setDouble(index, value);
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <code>repeated double seasonality_model = 8;</code>
       * @param value The seasonalityModel to add.
       * @return This builder for chaining.
       */
      public Builder addSeasonalityModel(double value) {

        ensureSeasonalityModelIsMutable();
        seasonalityModel_.addDouble(value);
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <code>repeated double seasonality_model = 8;</code>
       * @param values The seasonalityModel to add.
       * @return This builder for chaining.
       */
      public Builder addAllSeasonalityModel(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureSeasonalityModelIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, seasonalityModel_);
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <code>repeated double seasonality_model = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearSeasonalityModel() {
        seasonalityModel_ = emptyDoubleList();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.DoubleList allTrendModel_ = emptyDoubleList();
      private void ensureAllTrendModelIsMutable() {
        if (!allTrendModel_.isModifiable()) {
          allTrendModel_ = makeMutableCopy(allTrendModel_);
        }
        bitField0_ |= 0x00000100;
      }
      private void ensureAllTrendModelIsMutable(int capacity) {
        if (!allTrendModel_.isModifiable()) {
          allTrendModel_ = makeMutableCopy(allTrendModel_, capacity);
        }
        bitField0_ |= 0x00000100;
      }
      /**
       * <code>repeated double all_trend_model = 9;</code>
       * @return A list containing the allTrendModel.
       */
      public java.util.List<java.lang.Double>
          getAllTrendModelList() {
        allTrendModel_.makeImmutable();
        return allTrendModel_;
      }
      /**
       * <code>repeated double all_trend_model = 9;</code>
       * @return The count of allTrendModel.
       */
      public int getAllTrendModelCount() {
        return allTrendModel_.size();
      }
      /**
       * <code>repeated double all_trend_model = 9;</code>
       * @param index The index of the element to return.
       * @return The allTrendModel at the given index.
       */
      public double getAllTrendModel(int index) {
        return allTrendModel_.getDouble(index);
      }
      /**
       * <code>repeated double all_trend_model = 9;</code>
       * @param index The index to set the value at.
       * @param value The allTrendModel to set.
       * @return This builder for chaining.
       */
      public Builder setAllTrendModel(
          int index, double value) {

        ensureAllTrendModelIsMutable();
        allTrendModel_.setDouble(index, value);
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }
      /**
       * <code>repeated double all_trend_model = 9;</code>
       * @param value The allTrendModel to add.
       * @return This builder for chaining.
       */
      public Builder addAllTrendModel(double value) {

        ensureAllTrendModelIsMutable();
        allTrendModel_.addDouble(value);
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }
      /**
       * <code>repeated double all_trend_model = 9;</code>
       * @param values The allTrendModel to add.
       * @return This builder for chaining.
       */
      public Builder addAllAllTrendModel(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureAllTrendModelIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, allTrendModel_);
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }
      /**
       * <code>repeated double all_trend_model = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearAllTrendModel() {
        allTrendModel_ = emptyDoubleList();
        bitField0_ = (bitField0_ & ~0x00000100);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.DoubleList allSeasonalityModel_ = emptyDoubleList();
      private void ensureAllSeasonalityModelIsMutable() {
        if (!allSeasonalityModel_.isModifiable()) {
          allSeasonalityModel_ = makeMutableCopy(allSeasonalityModel_);
        }
        bitField0_ |= 0x00000200;
      }
      private void ensureAllSeasonalityModelIsMutable(int capacity) {
        if (!allSeasonalityModel_.isModifiable()) {
          allSeasonalityModel_ = makeMutableCopy(allSeasonalityModel_, capacity);
        }
        bitField0_ |= 0x00000200;
      }
      /**
       * <code>repeated double all_seasonality_model = 10;</code>
       * @return A list containing the allSeasonalityModel.
       */
      public java.util.List<java.lang.Double>
          getAllSeasonalityModelList() {
        allSeasonalityModel_.makeImmutable();
        return allSeasonalityModel_;
      }
      /**
       * <code>repeated double all_seasonality_model = 10;</code>
       * @return The count of allSeasonalityModel.
       */
      public int getAllSeasonalityModelCount() {
        return allSeasonalityModel_.size();
      }
      /**
       * <code>repeated double all_seasonality_model = 10;</code>
       * @param index The index of the element to return.
       * @return The allSeasonalityModel at the given index.
       */
      public double getAllSeasonalityModel(int index) {
        return allSeasonalityModel_.getDouble(index);
      }
      /**
       * <code>repeated double all_seasonality_model = 10;</code>
       * @param index The index to set the value at.
       * @param value The allSeasonalityModel to set.
       * @return This builder for chaining.
       */
      public Builder setAllSeasonalityModel(
          int index, double value) {

        ensureAllSeasonalityModelIsMutable();
        allSeasonalityModel_.setDouble(index, value);
        bitField0_ |= 0x00000200;
        onChanged();
        return this;
      }
      /**
       * <code>repeated double all_seasonality_model = 10;</code>
       * @param value The allSeasonalityModel to add.
       * @return This builder for chaining.
       */
      public Builder addAllSeasonalityModel(double value) {

        ensureAllSeasonalityModelIsMutable();
        allSeasonalityModel_.addDouble(value);
        bitField0_ |= 0x00000200;
        onChanged();
        return this;
      }
      /**
       * <code>repeated double all_seasonality_model = 10;</code>
       * @param values The allSeasonalityModel to add.
       * @return This builder for chaining.
       */
      public Builder addAllAllSeasonalityModel(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureAllSeasonalityModelIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, allSeasonalityModel_);
        bitField0_ |= 0x00000200;
        onChanged();
        return this;
      }
      /**
       * <code>repeated double all_seasonality_model = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearAllSeasonalityModel() {
        allSeasonalityModel_ = emptyDoubleList();
        bitField0_ = (bitField0_ & ~0x00000200);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.DoubleList allSeasonalityModelRmsError_ = emptyDoubleList();
      private void ensureAllSeasonalityModelRmsErrorIsMutable() {
        if (!allSeasonalityModelRmsError_.isModifiable()) {
          allSeasonalityModelRmsError_ = makeMutableCopy(allSeasonalityModelRmsError_);
        }
        bitField0_ |= 0x00000400;
      }
      private void ensureAllSeasonalityModelRmsErrorIsMutable(int capacity) {
        if (!allSeasonalityModelRmsError_.isModifiable()) {
          allSeasonalityModelRmsError_ = makeMutableCopy(allSeasonalityModelRmsError_, capacity);
        }
        bitField0_ |= 0x00000400;
      }
      /**
       * <code>repeated double all_seasonality_model_rms_error = 11;</code>
       * @return A list containing the allSeasonalityModelRmsError.
       */
      public java.util.List<java.lang.Double>
          getAllSeasonalityModelRmsErrorList() {
        allSeasonalityModelRmsError_.makeImmutable();
        return allSeasonalityModelRmsError_;
      }
      /**
       * <code>repeated double all_seasonality_model_rms_error = 11;</code>
       * @return The count of allSeasonalityModelRmsError.
       */
      public int getAllSeasonalityModelRmsErrorCount() {
        return allSeasonalityModelRmsError_.size();
      }
      /**
       * <code>repeated double all_seasonality_model_rms_error = 11;</code>
       * @param index The index of the element to return.
       * @return The allSeasonalityModelRmsError at the given index.
       */
      public double getAllSeasonalityModelRmsError(int index) {
        return allSeasonalityModelRmsError_.getDouble(index);
      }
      /**
       * <code>repeated double all_seasonality_model_rms_error = 11;</code>
       * @param index The index to set the value at.
       * @param value The allSeasonalityModelRmsError to set.
       * @return This builder for chaining.
       */
      public Builder setAllSeasonalityModelRmsError(
          int index, double value) {

        ensureAllSeasonalityModelRmsErrorIsMutable();
        allSeasonalityModelRmsError_.setDouble(index, value);
        bitField0_ |= 0x00000400;
        onChanged();
        return this;
      }
      /**
       * <code>repeated double all_seasonality_model_rms_error = 11;</code>
       * @param value The allSeasonalityModelRmsError to add.
       * @return This builder for chaining.
       */
      public Builder addAllSeasonalityModelRmsError(double value) {

        ensureAllSeasonalityModelRmsErrorIsMutable();
        allSeasonalityModelRmsError_.addDouble(value);
        bitField0_ |= 0x00000400;
        onChanged();
        return this;
      }
      /**
       * <code>repeated double all_seasonality_model_rms_error = 11;</code>
       * @param values The allSeasonalityModelRmsError to add.
       * @return This builder for chaining.
       */
      public Builder addAllAllSeasonalityModelRmsError(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureAllSeasonalityModelRmsErrorIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, allSeasonalityModelRmsError_);
        bitField0_ |= 0x00000400;
        onChanged();
        return this;
      }
      /**
       * <code>repeated double all_seasonality_model_rms_error = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearAllSeasonalityModelRmsError() {
        allSeasonalityModelRmsError_ = emptyDoubleList();
        bitField0_ = (bitField0_ & ~0x00000400);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.DoubleList allTrendModelRmsError_ = emptyDoubleList();
      private void ensureAllTrendModelRmsErrorIsMutable() {
        if (!allTrendModelRmsError_.isModifiable()) {
          allTrendModelRmsError_ = makeMutableCopy(allTrendModelRmsError_);
        }
        bitField0_ |= 0x00000800;
      }
      private void ensureAllTrendModelRmsErrorIsMutable(int capacity) {
        if (!allTrendModelRmsError_.isModifiable()) {
          allTrendModelRmsError_ = makeMutableCopy(allTrendModelRmsError_, capacity);
        }
        bitField0_ |= 0x00000800;
      }
      /**
       * <code>repeated double all_trend_model_rms_error = 12;</code>
       * @return A list containing the allTrendModelRmsError.
       */
      public java.util.List<java.lang.Double>
          getAllTrendModelRmsErrorList() {
        allTrendModelRmsError_.makeImmutable();
        return allTrendModelRmsError_;
      }
      /**
       * <code>repeated double all_trend_model_rms_error = 12;</code>
       * @return The count of allTrendModelRmsError.
       */
      public int getAllTrendModelRmsErrorCount() {
        return allTrendModelRmsError_.size();
      }
      /**
       * <code>repeated double all_trend_model_rms_error = 12;</code>
       * @param index The index of the element to return.
       * @return The allTrendModelRmsError at the given index.
       */
      public double getAllTrendModelRmsError(int index) {
        return allTrendModelRmsError_.getDouble(index);
      }
      /**
       * <code>repeated double all_trend_model_rms_error = 12;</code>
       * @param index The index to set the value at.
       * @param value The allTrendModelRmsError to set.
       * @return This builder for chaining.
       */
      public Builder setAllTrendModelRmsError(
          int index, double value) {

        ensureAllTrendModelRmsErrorIsMutable();
        allTrendModelRmsError_.setDouble(index, value);
        bitField0_ |= 0x00000800;
        onChanged();
        return this;
      }
      /**
       * <code>repeated double all_trend_model_rms_error = 12;</code>
       * @param value The allTrendModelRmsError to add.
       * @return This builder for chaining.
       */
      public Builder addAllTrendModelRmsError(double value) {

        ensureAllTrendModelRmsErrorIsMutable();
        allTrendModelRmsError_.addDouble(value);
        bitField0_ |= 0x00000800;
        onChanged();
        return this;
      }
      /**
       * <code>repeated double all_trend_model_rms_error = 12;</code>
       * @param values The allTrendModelRmsError to add.
       * @return This builder for chaining.
       */
      public Builder addAllAllTrendModelRmsError(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureAllTrendModelRmsErrorIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, allTrendModelRmsError_);
        bitField0_ |= 0x00000800;
        onChanged();
        return this;
      }
      /**
       * <code>repeated double all_trend_model_rms_error = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearAllTrendModelRmsError() {
        allTrendModelRmsError_ = emptyDoubleList();
        bitField0_ = (bitField0_ & ~0x00000800);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:io.openems.edge.predictor.lstm.modlepb.ModlePb)
    }

    // @@protoc_insertion_point(class_scope:io.openems.edge.predictor.lstm.modlepb.ModlePb)
    private static final io.openems.edge.predictor.lstm.modlepb.Modlepb.ModlePb DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.openems.edge.predictor.lstm.modlepb.Modlepb.ModlePb();
    }

    public static io.openems.edge.predictor.lstm.modlepb.Modlepb.ModlePb getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ModlePb>
        PARSER = new com.google.protobuf.AbstractParser<ModlePb>() {
      @java.lang.Override
      public ModlePb parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<ModlePb> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ModlePb> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.openems.edge.predictor.lstm.modlepb.Modlepb.ModlePb getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_io_openems_edge_predictor_lstm_modlepb_ModlePb_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_io_openems_edge_predictor_lstm_modlepb_ModlePb_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\rModlepb.proto\022&io.openems.edge.predict" +
      "or.lstm.modlepb\"\325\002\n\007ModlePb\022\023\n\013batch_tra" +
      "ck\030\001 \001(\005\022\023\n\013epoch_track\030\002 \001(\005\022\027\n\017rms_err" +
      "or_trend\030\003 \001(\001\022\035\n\025rms_error_seasonality\030" +
      "\004 \001(\001\022\026\n\016accuracy_trend\030\005 \001(\001\022\034\n\024accurac" +
      "y_seasonality\030\006 \001(\001\022\023\n\013trend_model\030\007 \003(\001" +
      "\022\031\n\021seasonality_model\030\010 \003(\001\022\027\n\017all_trend" +
      "_model\030\t \003(\001\022\035\n\025all_seasonality_model\030\n " +
      "\003(\001\022\'\n\037all_seasonality_model_rms_error\030\013" +
      " \003(\001\022!\n\031all_trend_model_rms_error\030\014 \003(\001B" +
      "(\n&io.openems.edge.predictor.lstm.modlep" +
      "bb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_io_openems_edge_predictor_lstm_modlepb_ModlePb_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_io_openems_edge_predictor_lstm_modlepb_ModlePb_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_io_openems_edge_predictor_lstm_modlepb_ModlePb_descriptor,
        new java.lang.String[] { "BatchTrack", "EpochTrack", "RmsErrorTrend", "RmsErrorSeasonality", "AccuracyTrend", "AccuracySeasonality", "TrendModel", "SeasonalityModel", "AllTrendModel", "AllSeasonalityModel", "AllSeasonalityModelRmsError", "AllTrendModelRmsError", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
