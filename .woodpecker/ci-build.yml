variables:
  - &sftp-settings
    server: 10.10.112.10
    username: user
    password: pass
    ignore_branch: true
    port: 2222
    path: /cache
    mount:
      - cache

  - &rsync-settings
    hosts: [ "10.0.0.40" ]
    user: fenecon-docs
    key:
      from_secret: ssh_key_intranet

  - &main-build
    branch: [main, develop]

  - &message-debian
    evaluate: 'CI_COMMIT_MESSAGE contains "[DEBIAN]"'

  - &ui-only
    path:
      include: [".woodpecker/ci-build.yml", "ui/**"]

  - &java-only
    path:
      include: [".woodpecker/ci-build.yml", "io.openems*/**", "**/*gradle*"]

clone:
  git:
    when: &every-build
      - *main-build
      - *message-debian
      - path:
          include: [".woodpecker/ci-build.yml", "ui/**", "io.openems*/**", "**/*gradle*"]
    image: woodpeckerci/plugin-git

steps:
  restore-cache:
    when: *every-build
    image: appleboy/drone-sftp-cache
    settings:
      restore: true
      <<: *sftp-settings

  build-ui:
    when:
      - *main-build
      - *message-debian
      - *ui-only
    image: openems-build:latest
    commands:
      - export OEM=$(case ${CI_COMMIT_BRANCH^^} in *HECKERT*) echo "heckert";; *) echo "fenecon";; esac)
      - export CACHE=$CI_WORKSPACE/cache
      - export npm_config_cache=$CACHE/npm
      - export NG_CLI_CACHE_PATH=$CACHE/angular-cli
      - export NODE_MODULES_CACHE=$CACHE/node_modules # TODO
      - export CHROME_BIN=/usr/bin/google-chrome-stable
      ### start ###
      - echo "Build for $OEM"
      - mkdir -p $CACHE
      - cd ui
      - npm ci --prefer-offline --cache $npm_config_cache --force
      - sed --in-place s#/m/#/${CI_COMMIT_BRANCH}/#g angular.json
      - sed --in-place s#/m/#/${CI_COMMIT_BRANCH}/#g src/themes/fenecon/root/site.webmanifest
      - node_modules/.bin/ng config cli.cache.path "$NG_CLI_CACHE_PATH"
      - node_modules/.bin/ng build --base-href /${CI_COMMIT_BRANCH}/ -c "$OEM,$OEM-backend-prod,prod"
      - node_modules/.bin/ng lint
      - npm run test -- --no-watch --no-progress --browsers=ChromeHeadlessCI
    depends_on: [restore-cache]

  build-java:
    when:
      - *main-build
      - *message-debian
      - *java-only
    image: openems-build:latest
    commands:
      - export CACHE=$CI_WORKSPACE/cache
      - mkdir -p $CACHE
      - export GRADLE_USER_HOME=$CACHE/gradle
      - export MAVEN_OPTS=-Dmaven.repo.local=$CACHE/maven
      ## start ##
      - source tools/common.sh
      - common_initialize_environment
      - common_build_snapshot_version
      - common_update_version_in_code
      - common_build_edge --parallel --max-workers 2;
    depends_on: [restore-cache]

  build-debian-package:
    when:
      - *main-build
      - *message-debian
    image: openems-build:latest
    commands:
      - export CACHE=$CI_WORKSPACE/cache
      - mkdir -p $CACHE
      - export GRADLE_USER_HOME=$CACHE/gradle
      - export npm_config_cache=$CACHE/npm
      - export NG_CLI_CACHE_PATH=$CACHE/angular-cli
      - export NODE_MODULES_CACHE=$CACHE/node_modules
      - export MAVEN_OPTS=-Dmaven.repo.local=$CACHE/maven
      - mkdir -p tools/debian/usr/lib/openems/
      - cp io.openems.edge.application/generated/distributions/executable/EdgeApp.jar tools/debian/usr/lib/openems/openems.jar
      - tools/build-debian-package.sh
    depends_on: [build-ui, build-java]

  refresh-dev-ui:
    when:
      - *main-build
      - *ui-only
    image: drillster/drone-rsync:latest
    settings:
      <<: *rsync-settings
      source: ui/target/
      recursive: true
      prescript: /opt/gitea/data/openems-ui-dev/prepare-location.sh ${CI_COMMIT_BRANCH}
      target: /opt/gitea/data/openems-ui-dev/html/${CI_COMMIT_BRANCH}
      script: /opt/gitea/data/openems-ui-dev/refresh-location.sh ${CI_COMMIT_BRANCH}
    depends_on: [build-ui]

  refresh-dev-deb:
    when:
      - *main-build
      - *message-debian
    image: drillster/drone-rsync:latest
    settings:
      <<: *rsync-settings
      exclude: ["*"]
      include: ["fems.deb", "fems.version"]
      target: /opt/gitea/data/openems-ui-dev/html/${CI_COMMIT_BRANCH}
    depends_on: [refresh-dev-ui, build-debian-package]

  rebuild-cache:
    when:
      - *main-build
    image: appleboy/drone-sftp-cache:latest
    settings:
      rebuild: true
      <<: *sftp-settings
    depends_on: [build-ui, build-java, build-debian-package]